<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.crm.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.zh.crm.entity.Role">
  <id column="roleId" jdbcType="INTEGER" property="roleId" />
  <result column="roleName" jdbcType="VARCHAR" property="roleName" />
  <result column="description" jdbcType="VARCHAR" property="description" />
  <result column="parentId" jdbcType="INTEGER" property="parentId" />
</resultMap>

  <resultMap id="RolePermsMap" type="com.zh.crm.entity.Role" extends="BaseResultMap">
    <collection property="permissionList" ofType="Permission">
      <id property="permissionId" column="permissionId"></id>
      <result property="permissionName" column="permissionName"></result>
      <result property="parentId" column="parentId"></result>
      <result property="permission" column="permission"></result>
      <result property="permissionType" column="permissionType"></result>
      <result property="permissionUrl" column="permissionUrl"></result>
      <result property="permissionOrder" column="permissionOrder"></result>
      <result property="permissionIcon" column="permissionIcon"></result>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    roleId, roleName, description, parentId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where roleId = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where roleId = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zh.crm.entity.Role">
    <selectKey keyProperty="roleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role (roleName, description, parentId
      )
    values (#{roleName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zh.crm.entity.Role">
    <selectKey keyProperty="roleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        roleName,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zh.crm.entity.Role">
    update sys_role
    <set>
      <if test="roleName != null">
        roleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parentId = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where roleId = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zh.crm.entity.Role">
    update sys_role
    set roleName = #{roleName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      parentId = #{parentId,jdbcType=INTEGER}
    where roleId = #{roleId,jdbcType=INTEGER}
  </update>

  <!--根据父id获取角色-->
  <select id="findRoleByParentId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role
    where parentId = #{parentId,jdbcType=INTEGER}
  </select>

  <!--根据角色id获取所有的权限-->
  <select id="findPersByRoleId" parameterType="java.lang.Integer"  resultMap="RolePermsMap">
    select sp.permissionId ,sp.permissionName,sp.parentId,sp.permission,sp.permissionType,
    sp.permissionUrl,sp.permissionOrder,sp.permissionIcon,sr.roleId,sr.roleName,sr.description,sr.parentId
     from sys_permission sp left join sys_role_permission  srp
     on sp.permissionId = srp.permissionId
     left join  sys_role sr on srp.roleId = sr.roleId
     where sr.roleId = #{roleId,jdbcType=INTEGER}
  </select>

  <!--根据roleId删除所有的权限-->
  <delete id="deletePermsByRoleId" parameterType="java.lang.Integer">
     delete from sys_role_permission
    where roleId = #{roleId,jdbcType=INTEGER}
  </delete>
  
  <!--批量新增权限-->
  <insert id="insertPermsBatch" parameterType="java.util.Map">
    insert into  sys_role_permission
    (roleId,permissionId) values
    <foreach collection="permIds" item="item" index="index"  separator=",">
      (#{roleId},#{item})
    </foreach>
  </insert>

  <select id="findAllRole" resultMap="RolePermsMap">
    select  <include refid="Base_Column_List" />
    from sys_role
  </select>

  <!--根据ids查询角色-->
  <select id="findRolesByIds" parameterType="java.lang.String" resultMap="BaseResultMap">
    select roleId,roleName from sys_role
    where roleId in (${ids})
  </select>
</mapper>