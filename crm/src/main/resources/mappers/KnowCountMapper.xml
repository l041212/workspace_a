<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.crm.mapper.KnowCountMapper">
  <resultMap id="BaseResultMap" type="com.zh.crm.entity.KnowCount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="knowId" jdbcType="INTEGER" property="knowId" />
    <result column="goodCount" jdbcType="INTEGER" property="goodCount" />
    <result column="opposeCount" jdbcType="INTEGER" property="opposeCount" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="createDate" jdbcType="VARCHAR" property="createDate" />
    <result column="readCount" jdbcType="INTEGER" property="readCount" />
  </resultMap>
  <sql id="Base_Column_List">
    id, knowId, goodCount, opposeCount, creater, createDate, readCount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kw_know_count
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from kw_know_count
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zh.crm.entity.KnowCount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kw_know_count (knowId, goodCount, opposeCount, 
      creater, createDate, readCount
      )
    values (#{knowId,jdbcType=INTEGER}, #{goodCount,jdbcType=INTEGER}, #{opposeCount,jdbcType=INTEGER}, 
      #{creater,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, #{readCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zh.crm.entity.KnowCount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kw_know_count
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="knowId != null">
        knowId,
      </if>
      <if test="goodCount != null">
        goodCount,
      </if>
      <if test="opposeCount != null">
        opposeCount,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="readCount != null">
        readCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="knowId != null">
        #{knowId,jdbcType=INTEGER},
      </if>
      <if test="goodCount != null">
        #{goodCount,jdbcType=INTEGER},
      </if>
      <if test="opposeCount != null">
        #{opposeCount,jdbcType=INTEGER},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        #{readCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zh.crm.entity.KnowCount">
    update kw_know_count
    <set>
      <if test="knowId != null">
        knowId = #{knowId,jdbcType=INTEGER},
      </if>
      <if test="goodCount != null">
        goodCount = #{goodCount,jdbcType=INTEGER},
      </if>
      <if test="opposeCount != null">
        opposeCount = #{opposeCount,jdbcType=INTEGER},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        readCount = #{readCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zh.crm.entity.KnowCount">
    update kw_know_count
    set knowId = #{knowId,jdbcType=INTEGER},
      goodCount = #{goodCount,jdbcType=INTEGER},
      opposeCount = #{opposeCount,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=VARCHAR},
      readCount = #{readCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--查询最近的知识访问时间-->
  <select id="findTopOneReadDate" parameterType="java.util.Map" resultType="java.lang.String">
    select createDate from kw_know_count
    where knowId = #{knowId,jdbcType=INTEGER} and creater = #{creater,jdbcType=VARCHAR}
    and readCount =1 order by createDate limit 1
  </select>

  <!--查询知识的访问量-->
  <select id="findKnowReadCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(createDate) from kw_know_count
    where knowId = #{knowId,jdbcType=INTEGER}
    and readCount =1
  </select>

  <!--查询用户是否已经给过好评-->

  <select id="findGoodCountByUser" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(goodCount) from  kw_know_count
    where knowId = #{knowId,jdbcType=INTEGER} and creater = #{creater,jdbcType=VARCHAR}
    and goodCount = 1
  </select>
  <select id="findBadCountByUser" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(opposeCount) from  kw_know_count
    where knowId = #{knowId,jdbcType=INTEGER} and creater = #{creater,jdbcType=VARCHAR}
    and opposeCount = 1
  </select>

  <!--查询文章好评量-->
  <select id="findKnowGoodCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(goodCount) from  kw_know_count
    where knowId = #{knowId,jdbcType=INTEGER} and goodCount = 1
  </select>

  <!--查询文章差评量-->
  <select id="findKnowBadCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(opposeCount) from  kw_know_count
    where knowId = #{knowId,jdbcType=INTEGER} and opposeCount = 1
  </select>
</mapper>